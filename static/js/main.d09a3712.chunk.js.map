{"version":3,"sources":["js/signs.js","js/base.js","components/Header.js","components/Listing.js","components/CartListing.js","components/CartArea.js","components/Sidebar.js","components/Main.js","components/AdminListing.js","components/AdminArea.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["signs","sign1","name","image","desc","status","sign2","sign3","sign4","sign5","sign6","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Header","state","isShowing","react_default","a","createElement","className","react_router_dom","to","Component","Listing","addToCart","event","console","log","currentTarget","value","_this","props","add","_this$props$details","this","details","key","src","alt","type","index","onClick","CartListing","remove","CartArea","Object","keys","map","components_CartListing","Sidebar","components_CartArea","Main","_this2","Fragment","components_Sidebar","components_Listing","AdminListing","handleChange","updatedSign","objectSpread","sign","defineProperty","updateSign","htmlFor","onChange","AdminArea","loadSigns","components_AdminListing","removeSign","NotFound","App","setState","deleteSign","ref","syncState","context","components_Header","react_router","exact","path","render","components_Main","components_AdminArea","component","Boolean","window","location","hostname","match","ReactDOM","basename","process","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d09a3712.chunk.js","sourcesContent":["const signs = {\n\tsign1: {\n\t\tname: 'france',\n\t\timage: './img/france.jpg',\n\t\tdesc: 'Intelligent, adaptable, quick-witted, charming, artistic, sociable',\n\t\tstatus: 'active'\n\t},\n\tsign2: {\n\t\tname: 'ox',\n\t\timage: './img/green.jpg',\n\t\tdesc: 'Loyal, reliable, thorough, strong, reasonable, steady, determined',\n\t\tstatus: 'active'\n\t},\n\tsign3: {\n\t\tname: 'tiger',\n\t\timage: './img/mujer.jpg',\n\t\tdesc: 'Enthusiastic, courageous, ambitious, leadership, confidence, charismatic',\n\t\tstatus: 'active'\n\t},\n\tsign4: {\n\t\tname: 'rabbit',\n\t\timage: './img/obey.jpg',\n\t\tdesc: 'Trustworthy, empathic, modest, diplomatic, sincere, sociable, caretakers, sensitive.',\n\t\tstatus: 'active'\n\t},\n\tsign5: {\n\t\tname: 'dragon',\n\t\timage: './img/three.jpg',\n\t\tdesc: 'Lucky, flexible, eccentric, imaginative, artistic, spiritual, charismatic',\n\t\tstatus: 'active'\n\t},\n\tsign6: {\n\t\tname: 'snake',\n\t\timage: './img/war.jpg',\n\t\tdesc: 'Philosophical, organized, intelligent, intuitive, elegant, attentive, decisive',\n\t\tstatus: 'active'\n\t}\n}\n\nexport default signs;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyB_U8zIzqEQdvp6ksa3YHdlHSMLGf3pJ0A\",\n    authDomain: \"obey-giant.firebaseapp.com\",\n    databaseURL: \"https://obey-giant.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\nexport default base;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  state = {\n    isShowing: false\n  };\n \n  render(){\n    return (\n       <header className=\"headerbar\">\n         <Link to=\"/admin\"><h1>Admin</h1> </Link>\n       </header>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass Listing extends Component {\n\n  addToCart = (event) => {\n    console.log(event.currentTarget.value);\n    this.props.add(event.currentTarget.value)\n  };\n\n  render() {\n    const { image, name, desc, status } = this.props.details;\n    return (\n      <div className=\"listing\"> \n        <li key=\"this.props.key\" className={status}>\n          <img src={image} alt={name} />\n          <h2>{name}</h2>\n          <h3>{status}</h3>\n          <p>{desc}</p>\n          <button type=\"button\" value={this.props.index} onClick={this.addToCart}> add to cart</button>\n        </li>\n      </div>\n    );\n  }\n}\n\nexport default Listing;","import React, { Component } from 'react';\n\nclass CartListing extends Component {\n\n  remove = (event) => {\n    console.log(event.currentTarget.value);\n  };\n\n  render() {\n    const { image, name, desc, status } = this.props.details;\n    return (\n      <div className=\"cartlisting\"> \n        <li key={this.props.index} className={status}>\n          <h2>{name}</h2>\n          <button type=\"button\" value={this.props.index} onClick={this.remove}> remove</button>\n        </li>\n      </div>\n    );\n  }\n}\n\nexport default CartListing;","import React, { Component } from 'react';\nimport CartListing from './CartListing';\n\nclass CartArea extends Component {\n    render() {\n        return ( \n                <ul>\n                    {Object.keys(this.props.signs).map(key => (\n                        <CartListing \n                            key={key} \n                            index={key} \n                            details={this.props.signs[key]}\n                        />\n                    ))}\n                </ul>\n\n        );\n    }\n}\n\nexport default CartArea;","import React, { Component } from 'react';\nimport CartArea from './CartArea';\n\nclass Sidebar extends Component {\n\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <h4>ANDRE THE GIANT HAS A POSSE</h4>\n        <CartArea \n          signs={this.props.signs}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;","import React, { Component } from 'react';\nimport Listing from './Listing';\nimport Sidebar from './Sidebar';\n\nclass Main extends Component {\n\n    add = (key) => {   \n            console.log({key});\n    };\n\n    render(){\n        return(\n        <React.Fragment>\n            <Sidebar \n                signs={this.props.signs}\n            />\n            <div className=\"listingArea\"> \n                <ul className=\"signs\">\n                    {Object.keys(this.props.signs).map(key => (\n                        <Listing \n                            key={key}\n                            index={key}\n                            add={this.add} \n                            details={this.props.signs[key]}\n                        />\n                    ))}\n                </ul>\n            </div>\n        </React.Fragment>\n        );\n    }\n}\n\nexport default Main;","import React, { Component } from 'react';\n\nclass AdminListing extends Component {\n  \n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    console.log(event.currentTarget.name);\n\n    const updatedSign = {\n      ...this.props.sign,\n      // ES6 dynamically get the 'name' attribute of the\n      // input element that is being updated.\n      // [event.currentTarget.name]\n      // Then set the value to whatever is entered in that input:\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n\n    console.log(updatedSign);\n    this.props.updateSign(this.props.index, updatedSign);\n  };\n\n  render() {\n    return (\n      <div className=\"sign-edit\">\n        <div className=\"controlgroup\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.props.sign.name}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"controlgroup\">\n          <label htmlFor=\"status\">Status</label>\n          <select\n            name=\"status\"\n            onChange={this.handleChange}\n            value={this.props.sign.status}\n          >\n            <option value=\"active\">Active</option>\n            <option value=\"inactive\">Inactive</option>\n          </select>\n        </div>\n        <div className=\"controlgroup\">\n          <textarea\n            name=\"desc\"\n            onChange={this.handleChange}\n            value={this.props.sign.desc}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminListing;","import React, { Component } from 'react';\nimport AdminListing from './AdminListing';\n\nclass AdminArea extends Component {\n    render() {\n        return ( \n            <React.Fragment>\n                <button type=\"button\" onClick={this.props.loadSigns}> reload </button>\n                <ul>\n                    {Object.keys(this.props.signs).map(key => (\n                        <AdminListing \n                            key={key} \n                            index={key} \n                            sign={this.props.signs[key]}\n                            updateSign={this.props.updateSign}\n                            removeSign={this.props.removeSign}\n                        />\n                    ))}\n                </ul>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default AdminArea;","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found :^(</h2>\n  </div>\n);\n\nexport default NotFound;","import React, { Component } from 'react';\nimport signs from './js/signs.js';\nimport { Route, Switch } from 'react-router-dom';\nimport base from './js/base';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport AdminArea from './components/AdminArea';\nimport NotFound from './components/NotFound';\n\nclass App extends Component {\n\n  state = {\n    signs: []\n  };\n\n  componentDidMount() {\n    this.ref = base.syncState('signs', {\n      context: this,\n      state: 'signs'\n    });\n  }\n\n  loadSigns = () => {\n    console.log(\"it work\");\n    this.setState({ signs });\n  };\n\n  updateSign = (key, updatedSign) => {\n    // console.log('update sign');\n    // 1. copy the current state\n    const signs = { ...this.state.signs };\n    // 2. update that state key/value\n    signs[key] = updatedSign;\n    // 3. set the new copy to the component state\n    this.setState({ signs });\n  };\n\n  deleteSign = () => {\n    console.log('delete sign');\n  };\n\n  render(){\n    return (\n      <React.Fragment>   \n        <Header />\n\n        <div className=\"App\">\n          <Switch>\n            <Route exact path=\"/\" render={(props) => <Main\n              signs={this.state.signs}           \n            />} />\n            <Route path=\"/admin\" render={(props) => <AdminArea\n                loadSigns={this.loadSigns}\n                updateSign={this.updateSign}\n                deleteSign={this.deleteSign}\n                signs={this.state.signs}\n              />} />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( \n    <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"content\">\n            <App />\n        </div>\n    </Router>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}